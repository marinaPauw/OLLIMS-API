// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OLLIMS_API.Models;

namespace OLLIMS_API.Migrations
{
    [DbContext(typeof(LIMSDbContext))]
    partial class LIMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OLLIMS_API.Models.AccessLevels", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("accessLevels");
                });

            modelBuilder.Entity("OLLIMS_API.Models.Instruments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("LaboratoryId")
                        .HasColumnName("laboratoryId")
                        .HasColumnType("int");

                    b.Property<int?>("MeasurementId")
                        .HasColumnName("measurementId")
                        .HasColumnType("int");

                    b.Property<int?>("Sopid")
                        .HasColumnName("SOPId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("LaboratoryId");

                    b.HasIndex("MeasurementId");

                    b.ToTable("instruments");
                });

            modelBuilder.Entity("OLLIMS_API.Models.Laboratory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("createdAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LaboratoryName")
                        .HasColumnName("laboratoryName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("laboratories");
                });

            modelBuilder.Entity("OLLIMS_API.Models.MeasurementValues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("LoggedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("MeasuredDatetime")
                        .HasColumnType("datetime");

                    b.Property<int?>("MeasurementId")
                        .HasColumnName("measurementId")
                        .HasColumnType("int");

                    b.Property<double?>("Value")
                        .HasColumnName("value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementId");

                    b.ToTable("measurementValues");
                });

            modelBuilder.Entity("OLLIMS_API.Models.Measurements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("InstrumentId")
                        .HasColumnName("instrumentId")
                        .HasColumnType("int");

                    b.Property<double?>("LowerLimit")
                        .HasColumnName("lowerLimit")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updatedAt")
                        .HasColumnType("datetime");

                    b.Property<double?>("UpperLimit")
                        .HasColumnName("upperLimit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("measurements");
                });

            modelBuilder.Entity("OLLIMS_API.Models.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccessLevelId")
                        .HasColumnName("accessLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Position")
                        .HasColumnName("position")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("personel");
                });

            modelBuilder.Entity("OLLIMS_API.Models.Sop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("createdAt")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentUrl")
                        .HasColumnName("documentURL")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("InstructionUrl")
                        .HasColumnName("instructionURL")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("InstrumentId")
                        .HasColumnName("instrumentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Version")
                        .HasColumnName("version")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SOP");
                });

            modelBuilder.Entity("OLLIMS_API.Models.SopTrainees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertificateUrl")
                        .HasColumnName("certificateURL")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("PersonId")
                        .HasColumnName("personId")
                        .HasColumnType("int");

                    b.Property<int?>("Sopid")
                        .HasColumnName("SOPId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrainedAt")
                        .HasColumnName("trainedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("Sopid");

                    b.ToTable("SOP_trainees");
                });

            modelBuilder.Entity("OLLIMS_API.Models.Instruments", b =>
                {
                    b.HasOne("OLLIMS_API.Models.Laboratory", "Laboratory")
                        .WithMany("Instruments")
                        .HasForeignKey("LaboratoryId")
                        .HasConstraintName("FK__instrumen__labor__4CA06362");

                    b.HasOne("OLLIMS_API.Models.Measurements", "Measurement")
                        .WithMany("Instruments")
                        .HasForeignKey("MeasurementId")
                        .HasConstraintName("FK__instrumen__measu__5535A963");
                });

            modelBuilder.Entity("OLLIMS_API.Models.MeasurementValues", b =>
                {
                    b.HasOne("OLLIMS_API.Models.Measurements", "Measurement")
                        .WithMany("MeasurementValues")
                        .HasForeignKey("MeasurementId")
                        .HasConstraintName("FK__measureme__measu__5629CD9C");
                });

            modelBuilder.Entity("OLLIMS_API.Models.SopTrainees", b =>
                {
                    b.HasOne("OLLIMS_API.Models.Personel", "Person")
                        .WithMany("SopTrainees")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK__SOP_train__perso__5165187F");

                    b.HasOne("OLLIMS_API.Models.Sop", "Sop")
                        .WithMany("SopTrainees")
                        .HasForeignKey("Sopid")
                        .HasConstraintName("FK__SOP_train__SOPId__5070F446");
                });
#pragma warning restore 612, 618
        }
    }
}
